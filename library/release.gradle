/*
 * Copyright 2017 Dev Labs
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.jfrog.bintray'
apply from: 'keystore.gradle'

ext {
    publishedGroupId = 'bg.devlabs.fullscreenvideoview'
    artifactId = 'library'
    libraryVersion = '1.1.4'
}

version = libraryVersion
group = publishedGroupId

bintray {
    user = 'slavipetrov'
    key = bintray_key
    configurations = ['archives']
    publish = true
    override = true
    pkg {
        repo = "maven"
        name = "fullscreen-video-view"
        version {
            name = libraryVersion
        }
    }
}

project.ext {
    mavDevelopers = ["SP":"Slavi Petrov"]
    mavSiteUrl = "https://github.com/dev-labs-bg/fullscreen-video-view"
    mavGitUrl = mavSiteUrl + '.git'
    mavProjectName = 'FullscreenVideoView'
    mavLibraryLicenses = ["Apache-2.0":'http://www.apache.org/licenses/LICENSE-2.0.txt']
    mavLibraryDescription = "FullscreenVideoView is a custom VideoView Android library which makes loading, setting up and going fullscreen for video views easy."
}

if (project.hasProperty("android")) {
    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    task javadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))

        android.libraryVariants.all { variant ->
            if (variant.name == 'release') {
                owner.classpath += variant.getJavaCompileProvider().get().classpath
            }
        }
        source = android.sourceSets.main.java.srcDirs
        exclude '**/R.html', '**/R.*.html', '**/index.html'
    }
} else { // Java libraries
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

apply from: 'https://raw.githubusercontent.com/sky-uk/gradle-maven-plugin/master/gradle-mavenizer.gradle'